version: "3.8"
networks:
  word_count_2:
    driver: bridge

services:
  # Hadoop HDFS
  namenode:
    image: apache/hadoop:3.3.6
    container_name: namenode
    hostname: namenode
    command: ["hdfs", "namenode"]
    env_file:
      - ./config
    ports:
      - "9870:9870" # NameNode Web UI
    environment:
      ENSURE_NAMENODE_DIR: "/tmp/hadoop-hadoop/dfs/name"
    networks:
      - word_count_2

  datanode1:
    image: apache/hadoop:3.3.6
    container_name: datanode1
    command: ["hdfs", "datanode"]
    env_file:
      - ./config
    depends_on:
      - namenode
    networks:
      - word_count_2

  datanode2:
    image: apache/hadoop:3.3.6
    container_name: datanode2
    command: ["hdfs", "datanode"]
    env_file:
      - ./config
    depends_on:
      - namenode
    networks:
      - word_count_2

  # Spark Standalone
  spark-master:
    image: bitnami/spark:3.4.1
    container_name: spark-master
    environment:
      - SPARK_MODE=master
      - SPARK_MASTER_HOST=spark-master
      - SPARK_MASTER_WEBUI_PORT=8080
    ports:
      - 8080:8080
      - 7077:7077
    networks:
      - word_count_2

  spark-worker1:
    image: bitnami/spark:3.4.1
    container_name: spark-worker1
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8081:8081" # Spark Worker1 Web UI
    networks:
      - word_count_2

  spark-worker2:
    image: bitnami/spark:3.4.1
    container_name: spark-worker2
    environment:
      - SPARK_MODE=worker
      - SPARK_MASTER_URL=spark://spark-master:7077
    ports:
      - "8082:8081" # Spark Worker2 Web UI
    networks:
      - word_count_2

  # Kafka and Zookeeper
  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - word_count_2

  kafka1:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka1
    ports:
      - "8097:8097"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:8097
    networks:
      - word_count_2

  kafka2:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka2
    ports:
      - "8098:8098"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:8098
    networks:
      - word_count_2

  kafka3:
    image: confluentinc/cp-kafka:7.2.1
    container_name: kafka3
    ports:
      - "8099:8099"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:8099
    networks:
      - word_count_2


  # Kafka UI
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "9000:8080" # Kafka UI Web Interface
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka1:8097,kafka2:8098,kafka3:8099
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    networks:
      - word_count_2
  superset:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: superset
    ports:
      - "8088:8088"
    environment:
      SUPERSET_WEBSERVER_PORT: 8088
    volumes:
      - ./superset:/app/superset_home
      - ./superset_config.py:/app/pythonpath/superset_config.py
    depends_on:
      - db
    networks:
      - word_count_2


  db:
    image: postgres:15
    container_name: superset-db
    environment:
      POSTGRES_USER: superset
      POSTGRES_PASSWORD: superset
      POSTGRES_DB: superset
    ports:
      - "5432:5432"
    restart: always
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    networks:
      - word_count_2
